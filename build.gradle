plugins {
    id 'fabric-loom' version '0.12-SNAPSHOT'
    id 'maven-publish'
    id("io.github.juuxel.loom-quiltflower") version "1.6.0"
    id 'org.quiltmc.quilt-mappings-on-loom' version '4.0.0'
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

archivesBaseName = project.archives_base_name
version = project.mod_version + "+" + "build." + project.build_number + "-" + project.minecraft_version
group = project.maven_group

repositories {
    mavenCentral()
    maven { url = "https://maven.parchmentmc.org" }
}

sourceSets {
    testmod {
        compileClasspath += main.compileClasspath
        runtimeClasspath += main.runtimeClasspath
    }
}

loom {
    accessWidenerPath = file("src/main/resources/artifice.accesswidener")
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.layered {
        it.addLayer(quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${project.quilt_mappings}:v2"))
        it.parchment("org.parchmentmc.data:parchment-1.18.1:BLEEDING-20220123.104336-10@zip")
        it.officialMojangMappings {
            setNameSyntheticMembers(false)
        }
    }
    modApi "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation("net.fabricmc.fabric-api:fabric-api:$fabric_version")

    testmodImplementation sourceSets.main.output
}

Properties properties = new Properties()
properties.put("total_version", version)

task updateTemplate(type: Copy) {
    group = "template"
    description = "Switches out variables like \$project.version in .template.md files, and copies the results into .md files."
    from(rootDir)
    include("**/*.template.md")
    filesMatching("**/*.template.md") {
        def extensionLength = ".template.md".length()

        name = sourceName.substring(0, sourceName.length() - extensionLength) + ".md"
        expand(properties)
    }
    destinationDir = rootDir
}
publish.dependsOn updateTemplate

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

java {
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}"}
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            url file("E:\\Development\\Work\\VampireStudiosMaven\\")
        }
    }
}